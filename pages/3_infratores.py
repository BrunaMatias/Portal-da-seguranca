import streamlit as st
import pandas as pd
from db_config import get_connection

st.set_page_config(page_title="Infratores - Julia", layout="centered")

st.title("üë• P√°gina de Infratores")
st.markdown("""
Nesta se√ß√£o do sistema, voc√™ pode cadastrar novos infratores e consultar os infratores registrados com base na situa√ß√£o judicial de cada um.
""")

#abas da interface
aba = st.tabs([
    "1Ô∏è‚É£ Cadastrar Infrator",
    "2Ô∏è‚É£ Consultar por Situa√ß√£o Judicial",
    "3Ô∏è‚É£ Trigger de Situa√ß√£o Padr√£o"
])

#cadastro de um novo infrator
with aba[0]:
    st.subheader("üì• Cadastrar Novo Infrator")
    st.caption("Preencha os campos abaixo para registrar um novo infrator na base de dados.")

    with st.form("form_infrator"):
        cpf = st.text_input("CPF do Infrator")
        situacao_judicial = st.selectbox("Situa√ß√£o Judicial", ["Preso", "Solto", "Foragido", "Em julgamento"])
        organizacao = st.text_input("Organiza√ß√£o Criminosa (opcional)")
        submitted = st.form_submit_button("Cadastrar")

    if submitted:
        try:
            conn = get_connection()
            cur = conn.cursor()

            #verifica se o cpf existe na tabela cidadao
            cur.execute("SELECT cpf FROM Cidadao WHERE cpf = %s", (cpf,))
            resultado = cur.fetchone()

            if resultado:
                cur.execute("""
                    INSERT INTO Infrator (idInfrator, situacaoJudicial, orgCriminosa)
                    VALUES (%s, %s, %s)
                """, (cpf, situacao_judicial, organizacao if organizacao else None))
                conn.commit()
                st.success("‚úÖ Infrator cadastrado com sucesso!")
            else:
                st.warning("‚ö†Ô∏è O CPF informado n√£o est√° cadastrado como cidad√£o. Cadastre primeiro em Cidadao.")

            cur.close()
            conn.close()

        except Exception as e:
            st.error(f"‚ùå Erro ao cadastrar infrator: {e}")

#consulta por situa√ß√£o judicial
with aba[1]:
    st.subheader("üîç Consultar Infratores por Situa√ß√£o Judicial")
    st.caption("Filtra infratores com base em sua situa√ß√£o judicial atual.")

    filtro_situacao = st.selectbox("Situa√ß√£o Judicial", ["Preso", "Solto", "Foragido", "Em julgamento"])

    if st.button("Buscar"):
        try:
            conn = get_connection()
            cur = conn.cursor()
            cur.execute("""
                SELECT idInfrator, situacaoJudicial, orgCriminosa
                FROM Infrator
                WHERE situacaoJudicial = %s
            """, (filtro_situacao,))
            resultados = cur.fetchall()
            cur.close()
            conn.close()

            if resultados:
                df = pd.DataFrame(resultados, columns=["CPF", "Situa√ß√£o Judicial", "Organiza√ß√£o Criminosa"])
                st.dataframe(df, use_container_width=True)
            else:
                st.warning("Nenhum infrator encontrado com essa situa√ß√£o.")
        except Exception as e:
            st.error(f"Erro na consulta: {e}")

#trigger de inser√ß√£o sem situa√ß√£o judicial, define para a situa√ß√£o judicial padr√£o "em julgamento"
with aba[2]:
    st.subheader("üß® Testar Trigger de Situa√ß√£o Judicial")
    st.caption("Ao inserir um infrator sem informar a situa√ß√£o judicial, a trigger `trg_situacao_padrao` define automaticamente o valor padr√£o `Em julgamento`.")

    with st.form("form_trigger_infrator"):
        cpf_trigger = st.text_input("CPF do Infrator (j√° cadastrado como Cidad√£o)")
        organizacao_trigger = st.text_input("Organiza√ß√£o Criminosa (opcional)")
        submit_trigger = st.form_submit_button("Cadastrar sem Situa√ß√£o Judicial")

    if submit_trigger:
        try:
            conn = get_connection()
            cur = conn.cursor()

            #verifica se o cpf existe na tabela cidadao
            cur.execute("SELECT cpf FROM Cidadao WHERE cpf = %s", (cpf_trigger,))
            resultado = cur.fetchone()

            if resultado:
                cur.execute("""
                    INSERT INTO Infrator (idInfrator, situacaoJudicial, orgCriminosa)
                    VALUES (%s, NULL, %s)
                """, (cpf_trigger, organizacao_trigger if organizacao_trigger else None))
                conn.commit()
                st.success("‚úÖ Infrator cadastrado sem situa√ß√£o judicial. Trigger ativada!")
            else:
                st.warning("‚ö†Ô∏è O CPF informado n√£o est√° cadastrado como cidad√£o.")

            cur.close()
            conn.close()

        except Exception as e:
            st.error(f"Erro: {e}")